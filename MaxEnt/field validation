require(devtools)
require(raster)
install_github("johnbaums/rmaxent")
require(rmaxent)
install.packages('dismo',dependencies=TRUE)
require(dismo)
require(rgdal)
require(spThin)
install.packages('rJava')
require(rJava)
install.packages('maxent')
require(maxent)
require(geosphere)
install_github('jeffreyevans/spatialEco')
require(spatialEco)


#read in the gopher fine scale SDM 
fine_sdm<-raster("C:/Users/Nathan/Desktop/Gopher/Presence_Only_shapefiles/Selected_Model_Hoffman_Feb_2020/maxent.asc")
plot(fine_sdm)

max_gbi<-import_maxent(dir="C:\\Users\\Nathan\\Desktop\\Gopher\\Presence_Only_shapefiles\\Selected_Model_Hoffman_Feb_2020",
                       lambdas='species.lambdas',html='maxent.html')
max_gbi

raster_dir<-"C:\\Users\\Nathan\\Desktop\\Gopher\\fine scale raster stack\\"
list.files(raster_dir)

predictors<-stack(paste0(raster_dir,list.files(raster_dir)[5]),
                  paste0(raster_dir,list.files(raster_dir)[6]),
                  paste0(raster_dir,list.files(raster_dir)[8]))

names(predictors)<-c("Soil Texture","Soil Drainage","Land Cover")
predictors
usdm::vif(predictors)
pairs(predictors)
memory.limit(NA)
Inpred<-dismo::predict(max_gbi,predictors)
plot(predictors)
occ.pts_df<-read.csv('C:\\Users\\Nathan\\Desktop\\Gopher\\Presence_Only_shapefiles\\Selected_Model_Hoffman_Feb_2020/geomys.csv')
points(cbind(occ.pts_df$X,occ.pts_df$Y),pch=17,col='cyan')
occ.pts<-SpatialPoints(cbind(occ.pts_df$X,occ.pts_df$Y))

set.seed(2)
bg <- randomPoints(Inpred, 10000)

plot(Inpred)
e1 <- evaluate(max_gbi, p=occ.pts, a=bg, x=predictors)
e1
threshold(e1)
#we will create discrete categories
#because the maximimum HSI value is 1, we will start
#categorization at 2.
re_1<-reclassify(Inpred,c(0,0.03287099,2))
re_2<-reclassify(re_1,c(0.03287010,.5,3))
re_3<-reclassify(re_2,c(.500000001,.75,4))
re_4<-reclassify(re_3,c(.750000001,1,5))
plot(re_4)                 
writeRaster(re_4,"C:/Users/Nathan/Desktop/Gopher/Field validation/Reclass_SDM.asc",overwrite=TRUE)
plot(Inpred)
dev.new()
extract_val<-extract(Inpred,occ.pts)
boxplot(extract_val)
plot(re_4)
median(extract_val)
cellStats(re_4,min)

roads<-readOGR(dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Political Boundaries\\IL_roads\\Hoffan_range_roads",layer="Hoffman_range_buff")
crs(roads)
roads_WGS84 <- spTransform(roads,crs(re_4))
memory.limit(1000000)

re_4_mask<-mask(re_4,roads_WGS84)
plot(re_4_mask)

#Generate 40 points randomly across 4 levels of habitat thresholds. Also identify which IDNR parks will be used.
#set.seed() was used to generate the random points so it can be replicated. 
#Erase function in arcmap was used to erase 3 points that were within 1km of presence locations to prevent pseudo-replication.
#All 3 erased points were high suitability (.75-1) with 2 in Mason county and 1 in Cass County 
set.seed(1)
sam<-sampleStratified(re_4_mask,40,xy=TRUE,sp=TRUE,na.rm=TRUE)
points(sam)
ex_sam<-extract(re_4,sam)
boxplot(ex_sam)
sam_dist<-distGeo(sam)
boxplot(sam_dist)
(sam_dist)
write.csv(sam_dist,"C:/Users/Nathan/Desktop/sample_point_dists.csv")
writeOGR(sam,"C:/Users/Nathan/Desktop/Gopher/Field validation",layer="field_verification_road_2",driver="ESRI Shapefile")    

parks<-readOGR("C:\\Users\\Nathan\\Desktop\\Gopher\\Field validation\\Park_layer",layer='Hoffman_parks')
plot(re_4)

points(sam)
crs(sam)<-crs(parks)
par_sam<-point.in.poly(sam,parks,sp=TRUE,dupliate=TRUE)
par_sam
plot(par_sam)
