install.packages("spatialEco")
install.packages("deldir", dependencies=TRUE)

library(deldir)
library(sp)
library(raster)
library (spatialEco)
library(rgdal)
library(rgeos)
library(maptools)





############################################
#########Create Voronoi Tessellation########
############################################

##Here, I create a voronoi tessellation around the combined sites.
##This will be used as a barrier layer when aggregating suitable habitat
##in ArcMap. This will allow sites to have and independent site area
##so that we can create a stratified sampling design.



##Read in the CTAP files

CTAP<-readOGR(dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="CTAP_withinRange_Bounded")

points(CTAP,pch=14,col="red")


##Read in the Random files

Rand<-readOGR(dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design\\Sites",layer="Final_Try")

##has 3 sets of coordinates, so need to restrict it to only have xy, not xyz

Rand_Try<-SpatialPointsDataFrame(coordinates(Rand)[,1:2],Rand@data)

site_coords<-rbind(coordinates(CTAP),coordinates(Rand_Try))
plot(site_coords)
vtess <- deldir(site_coords[,1],site_coords[,2])
plot(vtess)

plot(vtess, wlines="tess", wpoints="none", number=FALSE, lty=1)
names(vtess)

names(vtess)

begin.coord <- data.frame(lon=vtess$dirsgs[,1], lat=vtess$dirsgs[,2])
end.coord <- data.frame(lon=vtess$dirsgs[,3], lat=vtess$dirsgs[,4])

l <- vector("list", nrow(begin.coord))

for (i in seq_along(l)) {
    l[[i]] <- Lines(list(Line(rbind(begin.coord[i, ], end.coord[i,]))), as.character(i))
}

SL_tess<-(SpatialLines(l))
row.names(SL_tess)


## SpatialLines to SpatialLinesDataFrame
Sldf_tess <- SpatialLinesDataFrame(SL_tess, data = data.frame(row.names(SL_tess),"TESS"))



writeOGR(Sldf_tess,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Voronoi_Barriers",driver="ESRI Shapefile",overwrite=TRUE)

#### Now separte suitable polygons by the tessellation
##in ArcMap 10.5, aggregate suitable habitats that are within 
#### when aggregating the suitable habitat polygons

#ArcMap commands:
	#SelectbyLocation CTAP suitable sites 500m from each CTAP or random sites
		#Relationship=INTERSECT
	#Feature to Polygon, put in "Voronoi Barriers"
	#Aggregate Polygons 
		#1 km
		#Min Area 4000 sq meters
		#min hole size= 0 sq m
		#preserve orthogonal shape
	#Clip Aggregated Polygons by the Voronoi Polygons to create unique areas


###Create 4 transect sets for CTAP


####Read in the polygons within 500m of each site


Poly<-readOGR(dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design\\Sites",layer="Aggregated_Site_VoronoiClip")

plot(Poly)
plot(Sldf_tess,add=TRUE,col="red")


##.00107 decimal degrees is about 100m

############################################
###Calculate centroids of polygons##########
############################################
centroids <- SpatialPointsDataFrame(coords=getSpPPolygonsLabptSlots(Poly),data=Poly@data)
proj4string(centroids)<-proj4string(Poly)

points_strat<-sample.poly(Poly,n=4,type="regular")
points(points_strat,col="red")

Points_spdf<-SpatialPointsDataFrame(points_strat,data=data.frame(1:length(points_strat)))

Transects_strat<-sampleTransect(Points_spdf,min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)

writeOGR(Transects_strat$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Regular_Transects",driver="ESRI Shapefile",overwrite=TRUE)


#############################################
###Create transects based on site placement##
#############################################

CTAP_1<-sampleTransect(jitter.points(CTAP,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
CTAP_2<-sampleTransect(jitter.points(CTAP,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
CTAP_3<-sampleTransect(jitter.points(CTAP,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
CTAP_4<-sampleTransect(jitter.points(CTAP,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)

###Create 4 transect stes for Random points

Rand_1<-sampleTransect(jitter.points(Rand_Try,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
Rand_2<-sampleTransect(jitter.points(Rand_Try,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
Rand_3<-sampleTransect(jitter.points(Rand_Try,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)
Rand_4<-sampleTransect(jitter.points(Rand_Try,.001),
	min.length=.00107,max.length=.00107,bbox=Poly,mask=Poly)

##Rename the ID labels for each field

for(i in 1:length(CTAP_1$transects@data$IDS)){
	CTAP_1$transects@data$IDS[i]<-paste0(CTAP_1$transects@data$IDS[i],"_A")
	CTAP_2$transects@data$IDS[i]<-paste0(CTAP_2$transects@data$IDS[i],"_B")
	CTAP_3$transects@data$IDS[i]<-paste0(CTAP_3$transects@data$IDS[i],"_C")
	CTAP_4$transects@data$IDS[i]<-paste0(CTAP_4$transects@data$IDS[i],"_D")
}

for(i in 1:length(Rand_1$transects@data$IDS)){
	Rand_1$transects@data$OID_[i]<-paste0(Rand_1$transects@data$IDS_[i],"_A")
	Rand_2$transects@data$IDS[i]<-paste0(Rand_2$transects@data$IDS[i],"_B")
	Rand_3$transects@data$IDS[i]<-paste0(Rand_3$transects@data$IDS[i],"_C")
	Rand_4$transects@data$IDS[i]<-paste0(Rand_4$transects@data$IDS[i],"_D")
}

##Rename the column names of the transects

names(CTAP_1$transects)<-"CTAP_A"
names(CTAP_2$transects)<-"CTAP_B"
names(CTAP_3$transects)<-"CTAP_C"
names(CTAP_4$transects)<-"CTAP_D"

names(Rand_1$transects)<-"Rand_A"
names(Rand_2$transects)<-"Rand_B"
names(Rand_3$transects)<-"Rand_C"
names(Rand_4$transects)<-"Rand_D"

##Write transects to file

writeOGR(CTAP_1$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="CTAP_1_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(CTAP_2$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="CTAP_2_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(CTAP_3$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="CTAP_3_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(CTAP_4$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="CTAP_4_Transects",driver="ESRI Shapefile",overwrite=TRUE)


writeOGR(Rand_1$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Rand_1_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(Rand_2$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Rand_2_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(Rand_3$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Rand_3_Transects",driver="ESRI Shapefile",overwrite=TRUE)
writeOGR(Rand_4$transects,dsn="C:\\Users\\Nathan\\Desktop\\Gopher\\Survey Design",layer="Rand_4_Transects",driver="ESRI Shapefile",overwrite=TRUE)


###Will have to reposition transects in ArcMap to ensure that they overlap suitable habitat
### Will also have to validate names going forward. Converting KMZ file to shapefile dissociated site numbering

##may need to alter labeling of Rand_transects. Seems to be one less than the gdb layer file
